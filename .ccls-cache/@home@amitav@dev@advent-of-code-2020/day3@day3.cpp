#include <vector>
#include <string>

std::vector<std::string> input = {
  ".....##.#.....#........#....##.",
  "....#...#...#.#.......#........",
  ".....##.#......#.......#.......",
  "...##.........#...#............",
  "........#...#.......#.........#",
  "..........#......#..#....#....#",
  "..................#..#..#....##",
  ".....##...#..#..#..#..#.##.....",
  "..##.###....#.#.........#......",
  "#.......#......#......#....##..",
  ".....#..#.#.......#......#.....",
  "............#............#.....",
  "...#.#........#........#.#.##.#",
  ".#..#...#.....#....##..........",
  "##..........#...#...#..........",
  "...........#...###...#.......##",
  ".#..#............#........#....",
  "##.#..#.....#.......#.#.#......",
  ".##.....#....#.#.......#.##....",
  "..##...........#.......#..##.#.",
  "##...#.#........#..#...#...#..#",
  ".#..#........#.#.......#..#...#",
  ".##.##.##...#.#............##..",
  "..#.#..###......#..#......#....",
  ".#..#..#.##.#.##.#.#...........",
  "...#....#..#.#.#.........#..#..",
  "......#.#....##.##......#......",
  "#....#.##.##....#..#...........",
  "...#.#.#.#..#.#..#.#..#.##.....",
  "#.....#######.###.##.#.#.#.....",
  "..#.##.....##......#...#.......",
  "..#....#..#...##.#..#..#..#..#.",
  ".............#.##....#.........",
  ".#....#.##.....#...............",
  ".#............#....#...#.##....",
  ".#.....#.##.###.......#..#.....",
  ".#...#.........#.......#..#....",
  "..#.#..#.##.......##...........",
  ".....##..#..#..#..#.##..#.....#",
  "..##............##...#..#......",
  "...#..#....#..##.....##..#.#...",
  "#.....##....#.#.#...#...#..##.#",
  "#.#..#.........#.##.#...#.#.#..",
  ".....#.#....##....#............",
  "#.......#..#.....##..#...#...#.",
  ".....#.#...#...#..#......#.....",
  "..##....#.#.#.#.#..#...........",
  "##..#...#.........#......#...#.",
  "..#...#.#.#.#..#.#.##..##......",
  "#............###.....###.......",
  "..........#...#........###.....",
  ".......##...#...#...#........#.",
  ".#..#.##.#.....................",
  ".#..##........##.##...#.......#",
  ".......##......#.....#......#..",
  ".##.#.....#......#......#......",
  "#...##.#.#...#.#...............",
  "........#..#...#.##.......#....",
  "...................#...#...##..",
  "...#...#.........#.....#..#.#..",
  ".###..#........#..##.##..#.##..",
  "#...#.....#.....#.....#..#..#..",
  "###..#.....#.#.#.#......#....#.",
  "#........#....##.#...##........",
  ".#.#..##........##....##.#.#...",
  "#...#....#.###.#.#.........#...",
  "...#...##..###.......#.........",
  "......#....#..##..#.....#.#....",
  "........#...##...###......##...",
  "..........##.#.......##........",
  "...#....#......#...##.....#....",
  "###.#.....#.#..#..#....#...#..#",
  ".#.....#.#....#...............#",
  "..#....#....####....###....#.#.",
  "....##........#..#.##.#....#...",
  ".......##...#...#..#....####...",
  "#...##.#......##...#..#........",
  "..##..#.##....#.......##.#.#...",
  "..#.#...............#...#.#....",
  "....#.....#.#.....#.##.......#.",
  "...#.#..##.#.#..............##.",
  "..#.....#...#.............#.##.",
  "##..#.#...#........#..#.....##.",
  "...........##...#.#.###...#....",
  "...#.#.#..#..................#.",
  ".#...##.............#...#......",
  "..#..#...#.#.......#...#.....#.",
  "..##.......#.#.................",
  ".##..#........###.....#....#.##",
  "......#..###.......#....##....#",
  "....#.....#.................#..",
  "........#...#...#..............",
  "...#..#.###.......#..#.#.#.##..",
  "..#...#.....#....#.........#...",
  "...#.............#........###..",
  "......#..............#......#..",
  "#..#...........#...#..........#",
  "...##...#.###..#...#.....#.#...",
  "....#..##......#.......##......",
  "....#....##.#...#.#..#....#...#",
  ".#...........#..#....##...#..##",
  "..#.#.................###.#...#",
  "..#.#.#...##...........#.......",
  "..........#..##...#.#..##....##",
  "........#........#.##..#.#...#.",
  ".....#...##.......##......#...#",
  "....#...#..#..#.....#..........",
  ".#..#......#..#..#..###.......#",
  ".##..........#...#...#.#.....##",
  "..#..........#.#.#...###.......",
  "....#................#...##....",
  ".##..#....#..........#.#.#.....",
  "..##...#.#........#.....#.##...",
  "....####.....#..#.........##..#",
  "......#.........#...#..........",
  "....#...................#..##..",
  ".##....#.#.........#....#...#..",
  "....##...##.....#..####........",
  "..##.#....#.#.......##...#.....",
  "#...#.#.#...#..#..##.....#.....",
  "#..................###.....#...",
  "#.#.....#.......#.#...###.#....",
  ".#..#....#............#........",
  "#.#....#..#.#...............#..",
  "..#..#..#.............#......#.",
  "..#.......##...................",
  ".#....#.........#....#.#.#..#..",
  "....#....#..#...............#..",
  "......#..#..##......#.........#",
  "..#.##........##......#..#..#.#",
  "#.....#.#....#.........##...#..",
  "###..............#....###...##.",
  "....#..##......#.......##......",
  "......#...#.##......##....#..#.",
  "..........#....#..##.......#..#",
  ".#..#...##..#...........#..#..#",
  ".....#....#...#..###...###....#",
  ".#####..#...#.#.#..#.#.###...##",
  "..##............##.#...#.##...#",
  ".##..#...#...#....##.#..#..##..",
  ".#....#...#............##..#...",
  ".#.#......#....#....#..##..##..",
  ".........#...#.......#.##..#...",
  "#.........#.....##.....#..#..#.",
  "...##.#...#...#..#..#....##..##",
  ".#............#...#....##......",
  "..#...#.##.........#.#......#.#",
  "....#.##........#.........#..##",
  "#.........#......#.#......#..#.",
  "........#.#.......#.#........#.",
  "..#..........##.#...#..#.#.....",
  "..#...#....#...#...#..#.#..#.#.",
  ".#.........#....#..#####..#....",
  "#.#....#.#.###...#.............",
  "..##...........##......##......",
  "#.....#..#....#...............#",
  "...#.#..#....##......#...##....",
  "...#........#.....#...#..#.....",
  ".#......##.........#......#....",
  "..#..###.##...#.#.....#........",
  ".............#......#..#.......",
  "..#...............#.#...#..#..#",
  ".......#..#...#.#####......#..#",
  ".........#.....#...............",
  "##........#............#.#.....",
  ".#...#.....#..#..#...#....#...#",
  "..#....#....##......##.....#.#.",
  "#...##..##......#...#....#.....",
  "....#.#.#.....###....##.##....#",
  "..........##...##.......#......",
  "..#.......#...##.#....##.##....",
  "....#........................#.",
  "...#...#.#.##...#.....#...#..#.",
  ".#....##..#..#..........##..##.",
  ".#.....#..#...#.##.....#.......",
  ".#.##...#.#..#.....##....#...#.",
  ".##...#........##....#..#......",
  ".....#........#..........#.#..#",
  "....#..##.......#..#.....#.....",
  "...........#...#........#.##..#",
  ".....#..#....#..#.#.....#....##",
  ".....#....#.##.#..##...........",
  "...##.......##.........#.......",
  "...............##..#....#.#....",
  ".......###..#........#..####.##",
  ".......#.##...#.#....#.####....",
  "....#...............#..........",
  "##.#.......#.....#......#...#..",
  "......##.....#....#.....#..#..#",
  ".....#...##.............#......",
  "#.#.##.#.....#..#........#.....",
  "......##....#..#........#......",
  "............#........#..#.#....",
  "##.......#......#...####..#.##.",
  "..##..#...#.............#.##...",
  ".....#..##......#.##......###..",
  "............#........#........#",
  "#.#.#.#...#.#.....#.........#..",
  ".........#...............#.....",
  ".............###.#.......#....#",
  "###.##..#..#..........#....#...",
  "#......#...#..#..#.....#.##....",
  "............#....#....#..#.....",
  "..#.#....#...#......#.#..#..##.",
  "...#........................#..",
  "#.#...#..........#......#.#....",
  ".........#................#...#",
  "##.....#....#........##.......#",
  "#...##........#...#...........#",
  "...#...#..........##.......#.#.",
  "..#.#.#....#......##...........",
  "...#.#...#.##.#..#.#.##........",
  "#....##.....###..#.......#.....",
  "###.....#.#.#...#..#.........##",
  "..#......#..###...#.#.#.....#.#",
  ".#....#.....#............#..##.",
  "....#....##..........#.....##..",
  "#...........#....#...#..#...##.",
  "..#.......#.....#..........#...",
  ".#..#................#......#..",
  "..#......#.#...#..#.#....#....#",
  "...#..#...###..#..##....#.#....",
  "..#..............#.....#.......",
  "...#.#...#.........#.#.........",
  "##......##...........##.#.##..#",
  "..#..##..#....#.#......#.#...##",
  "...#.###....###...#.....#......",
  "#.#................#......#....",
  "..#.....#.....#....##.......#..",
  ".#.#...............##..#.......",
  "...#....#.......#.#.....##..#..",
  ".........#....#.......#.#...##.",
  "#....#......##.#.........##...#",
  "#.............#..##.#.#..##....",
  "...#....#..#...#....#.#.#.#...#",
  ".#....#....#..##.....#.#...###.",
  "##............#.#...##.#..#.#..",
  "##.#....##.....#..#..###....#..",
  "##....#................##......",
  "...##..#...#..###....#.....##..",
  ".#...##......#..#.#.....#...#..",
  "..##......##...#.##.......#....",
  "......#.....#.....##........#.#",
  "##....#...........#............",
  "#.......#....#..#.##..##.#..#..",
  ".#....##.#.....#..#..#.........",
  ".#....#.#.#...#.....##.....#.#.",
  ".......##.#.#........#......##.",
  "##........#.##.......#...#..#..",
  "...###..##....#.#....#.#.......",
  "......#.......#...##.....#...#.",
  "..#......##.#......#.....#.....",
  ".....#.....###...#.............",
  "#...#.#...#...#..#......#......",
  "#.....#.......###.#....###.#...",
  "...#.......#....####....##..#..",
  "#.#.....#....#........#.......#",
  ".........#.......#......#.#...#",
  "..##....#.....##...............",
  "..........#..#.#..#......#.....",
  "..................##...##.#....",
  "........#.......#...#..#.#.#...",
  ".....#.#..##..#..#.#..#.......#",
  ".....#........#..#..#....#....#",
  "##............#..#..#...#....#.",
  ".....#....................##..#",
  "........##.#....###............",
  "##.......#.##................#.",
  ".....###.#..#..#...#....###.##.",
  ".#......#.#....#.....##.#......",
  "...##......##.........#...#....",
  "....####..............#........",
  "#...#.#..##..##.........##.....",
  "......#......#....#..#.........",
  "#.....#.....#.##...............",
  "..#.##..#...##.#.####..#....###",
  "#..#......#....#.##..##...#.#..",
  "#....#.......#.....#.....#.#...",
  "##.......#.....##...#.....#....",
  "...#...##..........#..##..##..#",
  ".###..#..##...#....#...#..#....",
  "......##..###.......###...#....",
  "....#...#.#.......#.##...##..##",
  "#.#......#..##.#.#..#..#..#....",
  "......#........#.......#.......",
  "..........#.#.....##...........",
  "......#..#........#..#.#..###..",
  "##..#.............##..#........",
  ".........#....#.....#.........#",
  ".....#..##...#..#..##.##......#",
  "###..#...........#.......#....#",
  "...............#....#.#........",
  ".##.#...#.#........##....#.....",
  ".##.###...##..###....#...#...#.",
  ".##..#....#.#.#...#.#.#.#...#..",
  ".###.#...#.......#....#..#.....",
  "..#..#.#.#.#........#.....##...",
  ".#.......#.#...#.#...........##",
  "...#.....##....#.....##...#....",
  "................#.....####...#.",
  ".#.#......#.......##...#.##....",
  ".###.........#.#......#..#.#...",
  "#......#...#....#..##.......#..",
  ".##..#....#..#...........#...#.",
  ".#...#.......##........#.##....",
  "..#...........#...##...........",
  ".....##....##......#....#..#...",
  "#......#.#...#.##.#...##....#..",
  "#....................#...##...#",
  "..#............#........#......",
  ".............#.........##.....#",
  "...#...#......##.#...#...#.#...",
  "..#...#.#.................#....",
  "....##...#....#...###.##......#",
  "...#....#...#..#...#....#.....#",
  "...##.#........#..#.........#..",
  "..##.....#..##...#.....##...#..",
  "#.........#.#.#...#......#...#.",
  "#.#...........#...#..#..#..##..",
  "..#..#..##....#..........#.###.",
  ".....#..#....#.#...#...#..#..#.",
  "###.....#..#.................#.",
  ".#..##.##.#......#....##..#....",
};

int calculateTrees(int rise, int run) {
  int count = 0;
  int idx = 0;

  std::vector<char> contactedChars;

  for (int i = 0; i < input.size(); i += rise) {
    if (input[i].at(idx) == '#') {
      ++count;
    }

    idx += run;
    if (idx >= input[i].length()) idx = idx % input[i].length();
  }
  return count;
}

int main() {
  std::vector<int> treeCounts = {
    calculateTrees(1, 1),
    calculateTrees(1, 3),
    calculateTrees(1, 5),
    calculateTrees(1, 7),
    calculateTrees(2, 1),
  };

  printf("%d\n", treeCounts[0]);
  printf("%d\n", treeCounts[1]);
  printf("%d\n", treeCounts[2]);
  printf("%d\n", treeCounts[3]);
  printf("%d\n", treeCounts[4]);

  // too big for an int
  // int prod =  treeCounts[0] * treeCounts[1] * treeCounts[2] * treeCounts[3] * treeCounts[4];
  // printf("%d\n", prod);
  return 0;
}
